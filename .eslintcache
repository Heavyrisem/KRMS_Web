[{"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\index.tsx":"1","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Master.tsx":"2","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Header.tsx":"3","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\DashBoard.tsx":"4","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\DashComp.tsx":"5","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\index.tsx":"6","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\ts\\Master.tsx":"7","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\ts\\Header.tsx":"8","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\ts\\DashBoard.tsx":"9","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\ts\\DashComp.tsx":"10","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Unitchanger.ts":"11","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Login.tsx":"12","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Footer.tsx":"13","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Setting.tsx":"14"},{"size":236,"mtime":1610194687372,"results":"15","hashOfConfig":"16"},{"size":1928,"mtime":1613054812806,"results":"17","hashOfConfig":"16"},{"size":1458,"mtime":1611207160189,"results":"18","hashOfConfig":"16"},{"size":7463,"mtime":1613054758931,"results":"19","hashOfConfig":"16"},{"size":7393,"mtime":1612415201045,"results":"20","hashOfConfig":"16"},{"size":517,"mtime":1609387104156,"results":"21","hashOfConfig":"22"},{"size":673,"mtime":1609431124392,"results":"23","hashOfConfig":"22"},{"size":1459,"mtime":1609430850964,"results":"24","hashOfConfig":"22"},{"size":508,"mtime":1609493897604,"results":"25","hashOfConfig":"22"},{"size":3991,"mtime":1609493847401,"results":"26","hashOfConfig":"22"},{"size":1184,"mtime":1611065922738,"results":"27","hashOfConfig":"16"},{"size":3686,"mtime":1612849157627,"results":"28","hashOfConfig":"16"},{"size":223,"mtime":1611211835335,"results":"29","hashOfConfig":"16"},{"size":2520,"mtime":1613054822136,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1swwuzz",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1osplh4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\index.tsx",[],["61","62"],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Master.tsx",["63"],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Header.tsx",[],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\DashBoard.tsx",["64","65"],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\DashComp.tsx",["66"],"import React from 'react';\r\nimport * as Chartjs from 'chart.js';\r\nimport * as Chart from 'react-chartjs-2';\r\n\r\nimport { DBServer, Drive } from '../../../Types';\r\n\r\nimport '../style/DashComp.css';\r\nimport {ByteCal} from './Unitchanger';\r\nimport { User } from './Master';\r\nimport { Server } from 'http';\r\nChartjs.defaults.global.animation = {\r\n    duration: 1000,\r\n    easing: \"easeInBack\"\r\n};\r\ninterface DashBoardCom {\r\n    ChartCon: Chartjs.ChartConfiguration\r\n}\r\nconst Chartopt: Chartjs.ChartOptions = {\r\n    scales: {\r\n        yAxes: [{\r\n            ticks: {\r\n                max: 100,\r\n                stepSize: 33,\r\n                beginAtZero: true,\r\n                display: false\r\n            }\r\n        }],\r\n        xAxes: [{\r\n            gridLines: {\r\n                display: false\r\n            }\r\n        }]\r\n    }\r\n}\r\n\r\n\r\ninterface CpuProps {\r\n    CpuUsage: Array<number>,\r\n    Dates: Array<string>\r\n}\r\ninterface CpuStates extends DashBoardCom {\r\n}\r\nexport class CpuUsageMonitor extends React.Component<CpuProps, CpuStates> {\r\n\r\n    render() {\r\n        const data: Chartjs.ChartData = {\r\n            labels: this.props.Dates,\r\n            datasets: [{\r\n                label: 'Cpu Usage',\r\n                data: this.props.CpuUsage,\r\n                borderWidth: 1,\r\n                borderJoinStyle: 'bevel'\r\n            }]\r\n        }\r\n\r\n        return (\r\n            <div className=\"CpuUsage DashComp\">\r\n                <div className=\"CpuUsagePerc\">{this.props.CpuUsage[this.props.CpuUsage.length-1]}%</div>\r\n                <Chart.Line data={data} options={Chartopt} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\ninterface MemProps {\r\n    MemUsage: Array<number>,\r\n    Dates: Array<string>\r\n}\r\ninterface MemStates extends DashBoardCom {\r\n}\r\nexport class MemUsageMonitor extends React.Component<MemProps, MemStates> {\r\n    render() {\r\n        const data: Chartjs.ChartData = {\r\n            labels: this.props.Dates,\r\n            datasets: [{\r\n                label: 'Memory Usage',\r\n                data: this.props.MemUsage,\r\n                borderWidth: 1,\r\n                borderJoinStyle: 'bevel'\r\n            }]\r\n        }\r\n        \r\n        return (\r\n            <div className=\"MemUsage DashComp\">\r\n                <div className=\"MemUsagePerc\">{this.props.MemUsage[this.props.MemUsage.length-1]}%</div>\r\n                <Chart.Line data={data} options={Chartopt} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\ninterface QuterProp {\r\n    Datas: Array<{\r\n        Title?: string,\r\n        Desc?: string | number\r\n    }>\r\n}\r\n\r\nexport const QuterComp = (props: QuterProp) => {\r\n    const style: Array<React.CSSProperties> = [\r\n        {\r\n            paddingTop: \"2%\"\r\n        },\r\n        {\r\n            paddingBottom: \"2%\"\r\n        }\r\n    ]\r\n    const stylehorizon: Array<React.CSSProperties> = [\r\n        {\r\n            paddingLeft: \"2%\"\r\n        },\r\n        {\r\n            paddingRight: \"2%\"\r\n        }\r\n    ]\r\n    return <div className=\"QuterRoot\">{props.Datas&&\r\n        props.Datas.map((prop, idx) => {\r\n            // let cal = (2 > idx)? 0 : (props.Datas.length-2 <= idx)? 2 : 1;\r\n            let vertical = (2 > idx)? 1:0;\r\n            let horizontal = (idx+1) % 2;\r\n            return <div className=\"QuterComp\" style={{...style[vertical], ...stylehorizon[horizontal]}} key={idx}>\r\n                    <div className=\"DashComp\">\r\n                        <div className=\"QuterTitle\">{(prop.Title)? prop.Title:\"측정된 데이터가 없습니다.\"}</div>\r\n                        <div className=\"QuterDesc\">{(prop.Desc)? prop.Desc:\"측정된 데이터가 없습니다.\"}</div>\r\n                    </div>\r\n                </div>\r\n        })\r\n    }</div>\r\n}\r\n\r\ninterface DiskBoardProps {\r\n    Disks: Array<Drive>\r\n}\r\ninterface DiskBoardState {\r\n\r\n}\r\nexport class DiskBoard extends React.Component<DiskBoardProps, DiskBoardState> {\r\n\t// constructor(props: DiskBoardProps) {\r\n\t// \tsuper(props);\r\n    // }\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"DiskBoard DashComp\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"Disk Label\">\r\n\t\t\t\t\t<span className=\"DiskName\">이름</span>\r\n\t\t\t\t\t<span className=\"DiskUsedPrec\">사용률</span>\r\n\t\t\t\t\t<span className=\"DiskFreeSize\">남은 공간</span>\r\n\t\t\t\t\t<span className=\"DiskSize\">크기</span>\r\n\t\t\t\t\t<span className=\"DiskMount\">위치</span>\r\n\t\t\t\t</div>\r\n\r\n                {this.props.Disks&&\r\n                    this.props.Disks.map((Disk, idx) => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<div className=\"DiskData\" key={idx}>\r\n\t\t\t\t\t\t\t\t<div className=\"Disk\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"DiskName\">{Disk.name}</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"DiskUsedPrec\">{(Disk.freesize&&Disk.size)&& parseFloat(100-Disk.freesize / Disk.size * 100+\"\").toFixed(1)}%</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"DiskFreeSize\">{ByteCal(Disk.freesize as number)}</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"DiskSize\">{ByteCal(Disk.size as number)}</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"DiskMount\">{Disk.mount}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n                    })  \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\ninterface WarnProps {\r\n    message: string\r\n}\r\ninterface WarnStates {}\r\nexport class Warn extends React.Component<WarnProps, WarnStates> {\r\n    render() {\r\n        return (\r\n            <div className=\"DashComp WarningComp\">{this.props.message}</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\ninterface RemoveProps {\r\n    Server?: DBServer,\r\n    User: User\r\n}\r\ninterface RemoveStates {\r\n    displayBtn: boolean,\r\n    displayConfirmBtn: boolean,\r\n    ServerResponse?: string\r\n}\r\nexport class RemoveServer extends React.Component<RemoveProps, RemoveStates> {\r\n\r\n    constructor(props: RemoveProps) {\r\n        super(props);\r\n        this.state = {\r\n            displayBtn: true,\r\n            displayConfirmBtn: false\r\n        }\r\n    }\r\n\r\n    async Remove() {\r\n        let ServerResponse = await fetch(`http://${process.env[\"REACT_APP_KRMS_SERVER_ADDRESS\"]}/RemoveServer`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ token: this.props.User.token, macaddr: this.props.Server?.macaddr }),\r\n            headers: {\"content-type\": \"application/json\"}\r\n        });\r\n        let ServerMessage = await ServerResponse.json();\r\n        \r\n\r\n        if (ServerMessage.err) {\r\n            this.setState({\r\n                ServerResponse: ServerMessage.err\r\n            });\r\n        } else {\r\n            this.setState({\r\n                ServerResponse: ServerMessage.msg\r\n            })\r\n\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    displayBtn: false\r\n                },() => {\r\n                    console.log(\"CLOSE\",this.state)\r\n                })\r\n            }, 4000);\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            {(this.props.Server && this.state.displayBtn)&& \r\n                <>\r\n                    {this.state.displayConfirmBtn?\r\n                        <div className=\"DashComp RemoveComp\" onClick={(this.Remove.bind(this))}>{this.props.Server.name} 삭제하려면 다시 눌러주세요</div>:\r\n                        !this.state.ServerResponse?<div className=\"DashComp RemoveComp\" onClick={() => {this.setState({displayConfirmBtn: true})}}>{this.props.Server.name} 삭제</div>:\r\n                        <div className=\"DashComp RemoveComp\">{this.state.ServerResponse}</div>\r\n                    }\r\n                </>\r\n            }\r\n        </>)\r\n    }\r\n}","C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\index.tsx",[],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\ts\\Master.tsx",[],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\ts\\Header.tsx",["67"],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\ts\\DashBoard.tsx",["68"],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\WEB\\src\\ts\\DashComp.tsx",["69"],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Unitchanger.ts",[],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Login.tsx",[],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Footer.tsx",[],"C:\\Users\\insu\\Desktop\\Develop\\monitoring\\web\\src\\ts\\Setting.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":10,"column":20,"nodeType":"76","messageId":"77","endLine":10,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":82,"column":48,"nodeType":"80","messageId":"81","endLine":82,"endColumn":50},{"ruleId":"82","severity":1,"message":"83","line":122,"column":13,"nodeType":"76","messageId":"84","endLine":122,"endColumn":31},{"ruleId":"74","severity":1,"message":"85","line":10,"column":10,"nodeType":"76","messageId":"77","endLine":10,"endColumn":16},{"ruleId":"74","severity":1,"message":"86","line":30,"column":15,"nodeType":"76","messageId":"77","endLine":30,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":14,"column":5,"nodeType":"89","messageId":"90","endLine":18,"endColumn":6},{"ruleId":"74","severity":1,"message":"91","line":61,"column":13,"nodeType":"76","messageId":"77","endLine":61,"endColumn":14},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'GetServersNet' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-redeclare","'UsageArr' is already defined.","redeclared","'Server' is defined but never used.","'UserDropDown' is assigned a value but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'c' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]